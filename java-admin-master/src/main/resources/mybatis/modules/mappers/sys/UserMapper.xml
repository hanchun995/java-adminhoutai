<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huiwan.gdata.modules.sys.mapper.UserMapper">

	<!--=========================查询数据返回集合 配置====================================================== -->
	<resultMap type="com.huiwan.gdata.modules.sys.entity.User" id="resultMapId">
		
	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_by_id" jdbcType="INTEGER" property="createById" />
    <result column="update_by_id" jdbcType="INTEGER" property="updateById" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remake" jdbcType="VARCHAR" property="remake" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
		
		<!-- 联合 审请信息 -->
		<association property="department" column="departmentId"
			select="selectDepartment" javaType="com.huiwan.gdata.modules.sys.entity.Department" />

		<!-- 获取角色 -->
		<collection property="roles" ofType="com.huiwan.gdata.modules.sys.entity.Role"
			javaType="ArrayList" column="id" select="getRoleList">
			<id property="id" column="id" />
			<result column="id" property="id" />
		</collection>

	</resultMap>

	<!-- 查询用户所在部门 -->
	<resultMap type="com.huiwan.gdata.modules.sys.entity.Department"
		id="departmentMapId">
		<id property="id" column="id" />
	</resultMap>

	<select id="selectDepartment" parameterType="Integer" resultMap="departmentMapId">
		SELECT * FROM `sys_department` where id=#{departmentId};
	</select>


	<!-- 获取角色 -->
	<select id="getRoleList" parameterType="_int"
		resultType="com.huiwan.gdata.modules.sys.entity.Role">
		select * from sys_role where id in(
		SELECT role_id FROM
		`sys_user_role` where user_id=#{id}
		)
	</select>

	<!--=========================根据id ============================================================================= -->
	<select id="get" resultMap="resultMapId" parameterType="Integer">
		select *
		from sys_user where id=#{id}
	</select>

	<!--=========================根据登际名查询 ============================================================================= -->
	<select id="queryByUserName" resultMap="resultMapId" parameterType="String">
		select *
		from sys_user where user_name=#{userName}
	</select>


	<!-- 搜索条件判断 -->
	<sql id="searchField">
		<where>
			<if test="bean.userName != null and bean.userName != ''">AND user_name LIKE CONCAT('%',#{bean.userName},'%') </if>
		</where>
	</sql>
	<!--=========================查询搜索 ============================================================================= -->
	<select id="queryPages" parameterType="com.huiwan.gdata.common.bean.page.Query"
		resultMap="resultMapId">
		select * from sys_user
		<include refid="searchField" />
		
			<choose>
			<when test="orderBy != null and orderBy != ''">
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				order by id asc
			</otherwise>
		</choose>
		
		
		LIMIT
		#{startRow},#{pageSize}
	</select>


	<select id="getCount" resultType="long"
		parameterType="com.huiwan.gdata.common.bean.page.Query">
		select count(*) from sys_user
		<include refid="searchField" />
	</select>
	
	
		<!-- 搜索条件判断 -->
	<sql id="queryField">
		<where>
			<if test="userName != null and userName != ''">AND user_name=#{userName}</if>
			<if test="password != null and password != ''">AND password=#{password}</if>
		</where>
	</sql>
	<select id="query" parameterType="com.huiwan.gdata.modules.sys.vo.UserLoginVo"
		resultMap="resultMapId">
		select * from sys_user
		<include refid="queryField" />
	</select>
	


	<!--=========================添加 ============================================================================= -->

<!-- 	<insert id="add" useGeneratedKeys="true" keyProperty="id"> -->
<!-- 		insert into -->
<!-- 		sys_user(department_id,user_name,password) -->
<!-- 		values(#{departmentId},#{userName},#{password}) -->
<!-- 	</insert> -->




	 <insert id="insert" parameterType="com.huiwan.gdata.modules.sys.entity.User" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user (id, department_id, user_name, 
      password, full_name, type, 
      email, status, create_by_id, 
      update_by_id, create_time, update_time, 
      remake, last_login_time)
    values (#{id,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{fullName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{email,jdbcType=CHAR}, #{status,jdbcType=INTEGER}, #{createById,jdbcType=INTEGER}, 
      #{updateById,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remake,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.huiwan.gdata.modules.sys.entity.User" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createById != null">
        create_by_id,
      </if>
      <if test="updateById != null">
        update_by_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remake != null">
        remake,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createById != null">
        #{createById,jdbcType=INTEGER},
      </if>
      <if test="updateById != null">
        #{updateById,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remake != null">
        #{remake,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>


	<!-- 删除 -->
	<delete id="del" parameterType="_int">
		DELETE from sys_user where
		id=#{id}
	</delete>

	<!--=========================修改 ============================================================================= -->

	
  <update id="updateByPrimaryKeySelective" parameterType="com.huiwan.gdata.modules.sys.entity.User">
    update sys_user
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="userName != null and userName != ''">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="email != null ">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createById != null">
        create_by_id = #{createById,jdbcType=INTEGER},
      </if>
      <if test="updateById != null">
        update_by_id = #{updateById,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remake != null">
        remake = #{remake,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huiwan.gdata.modules.sys.entity.User">
    update sys_user
    set department_id = #{departmentId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      full_name = #{fullName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      email = #{email,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      create_by_id = #{createById,jdbcType=INTEGER},
      update_by_id = #{updateById,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remake = #{remake,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  

	<!--=========================一个用户关联角色 ============================================================================= -->

	<insert id="addUserRole">
		insert into
		sys_user_role(user_id,role_id)
		values(#{userId},#{roleId})
	</insert>

	<insert id="addUserDepartment">
		insert into
		sys_user_department(department_id,user_id)
		values(#{departmentId},#{userId})
	</insert>


	<!-- 删除 -->
	<delete id="delUserRole" parameterType="_int">
		DELETE from sys_user_role
		where user_id=#{userId}
	</delete>
	
		<!-- 删除 -->
	<delete id="delUserDepartment" parameterType="_int">
		DELETE from sys_user_department
		where user_id=#{userId}
	</delete>

	<update id="updateUserDepartment" >
		update sys_user_department set department_id=#{departmentId}	where user_id=#{userId}
	</update>

</mapper>




