<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <import resource="core/application-core.xml" />
    
    <!--系统 数据库 -->
	<bean id="dataSource"  parent="baseDataSource" p:url="${jdbc.url}" p:username="${jdbc.username}"  p:password="${jdbc.password}"/>
	<!-- 日志数据库 -->
    <bean id="psqlGDataSource"  parent="baseDataSource" p:url="${jdbc.psql_game_log.url}" p:username="${jdbc.psql_game_log.username}"  p:password="${jdbc.psql_game_log.password}"/>
	
	<!-- mybatis映射 配置-->
	 <import resource="mybatis/application-data-dao.xml"/>
<!-- postgres 暂不用mybatis处理 用spring dao	 <import resource="mybatis/application-psql-gdata-dao.xml"/> -->

	<!-- 控制服务器日志数据源配置 -->
	<bean id="xLogDataSource"  parent="baseDataSource" p:url="${jdbc.log_x_url}" p:username="${jdbc.log_x_username}"  p:password="${jdbc.log_x_password}"/>
	
	<!-- sqlite数据源配置 -->
<!-- 	<bean id="sqliteDataSource"  parent="baseDataSource" p:url="${sqlite.jdbc.path}" /> -->
	
	
	<bean id="sqliteDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
<!--       <property name="password" value="test" /> -->
     <property name="driverClassName" value="org.sqlite.JDBC" />
     <property name="url" value="${sqlite.jdbc.path}" />
     <property name="filters" value="stat" />
     <property name="maxActive" value="20" />
     <property name="initialSize" value="1" />
     <property name="maxWait" value="60000" />
     <property name="minIdle" value="1" />
     <property name="timeBetweenEvictionRunsMillis" value="60000" />
     <property name="minEvictableIdleTimeMillis" value="300000" />
     <property name="testWhileIdle" value="true" />
     <property name="testOnBorrow" value="false" />
     <property name="testOnReturn" value="false" />
     <property name="poolPreparedStatements" value="true" />
<!--      <property name="maxOpenPreparedStatements" value="20" /> -->
    </bean>
    
	
    <!-- 定时任务 -->
	<task:annotation-driven  executor="myExecutor" scheduler="myScheduler" />
    <task:executor id="myExecutor" pool-size="5" />
    <task:scheduler id="myScheduler" pool-size="2" />
    <!-- 通过配置织入@Aspectj切面  -->
    <aop:aspectj-autoproxy />
    <!-- AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor 以及 RequiredAnnotationBeanPostProcessor 这 4 个BeanPostProcessor。 -->
    <context:annotation-config/>
    <mvc:annotation-driven>
	<mvc:argument-resolvers>
	<bean class="com.huiwan.gdata.common.utils.converter.JSONConverter" />
	<bean class="com.huiwan.gdata.modules.sys.web.converter.permissionAnnotResolver" />
<!-- 	<bean class="com.huiwan.gdata.modules.sys.shiro.CurrentUserMethodArgumentResolver" /> -->
<!-- 	<bean class="com.huiwan.gdata.modules.sys.web.converter.ValidateHandlerResolver" /> -->
	<bean class="com.huiwan.gdata.modules.sys.web.converter.ValidateMethodParamHandlerResolver" />
	</mvc:argument-resolvers>
	<mvc:message-converters>
		<bean
			class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			<property name="objectMapper">
				<bean class="com.huiwan.gdata.common.utils.converter.ResponseNullUtil"></bean>
			</property>
		</bean>
	</mvc:message-converters>  
</mvc:annotation-driven>

    <!-- 处理静态文件 -->
    <mvc:default-servlet-handler/>
	<mvc:interceptors> 
		<mvc:interceptor>
		     <mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/views/**"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/favicon.ico"/>
			<mvc:exclude-mapping path="/logout"/>
			<mvc:exclude-mapping path="/unauthorized"/>
			<mvc:exclude-mapping path="/jcaptcha.jpg"/>
			<mvc:exclude-mapping path="/loginPage"/>
			<bean class="com.huiwan.gdata.modules.sys.web.interceptor.SysWebRequestInterceptor"/> 
		</mvc:interceptor>
	</mvc:interceptors>  

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
<!-- 		<property name="prefix" value="/views/" /> -->
<!-- 		<property name="suffix" value=".html" /> -->
	</bean>

<!-- freeMarker -->
<bean id="freeMarker" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
  <property name="templateLoaderPath" value="classpath:ftl"/><!--指定模板文件目录-->   
  <property name="freemarkerSettings"><!-- 设置FreeMarker环境属性-->   
      <props>  
          <prop key="template_update_delay">1800</prop><!--刷新模板的周期，单位为秒-->   
          <prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->  
          <prop key="locale">zh_CN</prop><!-- 本地化设置-->  
      </props>  
  </property>  
</bean>  
	
<!-- 获取bean -->
<bean id="sysApplicationContext" class="com.huiwan.gdata.common.utils.spring.SysApplicationContext">
</bean>

</beans>